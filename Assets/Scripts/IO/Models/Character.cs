// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: character.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MM26.IO.Models {

  /// <summary>Holder for reflection information generated from character.proto</summary>
  public static partial class CharacterReflection {

    #region Descriptor
    /// <summary>File descriptor for character.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CharacterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9jaGFyYWN0ZXIucHJvdG8SCWNoYXJhY3RlchoKaXRlbS5wcm90byLpBAoJ",
            "Q2hhcmFjdGVyEhYKDmN1cnJlbnRfaGVhbHRoGAEgASgFEhcKD2Jhc2VfbWF4",
            "X2hlYWx0aBgCIAEoBRISCgpleHBlcmllbmNlGAMgASgFEg0KBWxldmVsGAQg",
            "ASgFEhIKCmJhc2Vfc3BlZWQYBSABKAUSJQoIcG9zaXRpb24YBiABKAsyEy5j",
            "aGFyYWN0ZXIuUG9zaXRpb24SKAoLc3Bhd25fcG9pbnQYByABKAsyEy5jaGFy",
            "YWN0ZXIuUG9zaXRpb24SHAoGd2VhcG9uGAggASgLMgwuaXRlbS5XZWFwb24S",
            "RQojYWN0aXZlX2VmZmVjdHNfdGVtcF9zdGF0dXNfbW9kaWZpZXIYCSADKAsy",
            "GC5pdGVtLlRlbXBTdGF0dXNNb2RpZmllchIdChVhY3RpdmVfZWZmZWN0c19z",
            "b3VyY2UYCiADKAkSIAoYYWN0aXZlX2VmZmVjdHNfaXNfcGxheWVyGAsgAygI",
            "EkwKFXRhZ2dlZF9wbGF5ZXJzX2RhbWFnZRgMIAMoCzItLmNoYXJhY3Rlci5D",
            "aGFyYWN0ZXIuVGFnZ2VkUGxheWVyc0RhbWFnZUVudHJ5Eg8KB2lzX2RlYWQY",
            "DSABKAgSGQoRdGlja3Nfc2luY2VfZGVhdGgYDiABKAUSDAoEbmFtZRgPIAEo",
            "CRITCgtiYXNlX2F0dGFjaxgQIAEoBRIUCgxiYXNlX2RlZmVuc2UYESABKAUS",
            "DgoGc3ByaXRlGBIgASgJGjoKGFRhZ2dlZFBsYXllcnNEYW1hZ2VFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAU6AjgBImIKB01vbnN0ZXISJwoJ",
            "Y2hhcmFjdGVyGAEgASgLMhQuY2hhcmFjdGVyLkNoYXJhY3RlchIZCgVkcm9w",
            "cxgCIAMoCzIKLml0ZW0uSXRlbRITCgthZ2dyb19yYW5nZRgDIAEoBSKIAgoG",
            "UGxheWVyEicKCWNoYXJhY3RlchgBIAEoCzIULmNoYXJhY3Rlci5DaGFyYWN0",
            "ZXISFgoDaGF0GAIgASgLMgkuaXRlbS5IYXQSHgoHY2xvdGhlcxgDIAEoCzIN",
            "Lml0ZW0uQ2xvdGhlcxIaCgVzaG9lcxgEIAEoCzILLml0ZW0uU2hvZXMSIgoJ",
            "YWNjZXNzb3J5GAUgASgLMg8uaXRlbS5BY2Nlc3NvcnkSHQoJaW52ZW50b3J5",
            "GAYgAygLMgouaXRlbS5JdGVtEhUKDWJvdHRvbV9zcHJpdGUYByABKAkSEgoK",
            "dG9wX3Nwcml0ZRgIIAEoCRITCgtoZWFkX3Nwcml0ZRgJIAEoCSLGAQoLUGxh",
            "eWVyU3RhdHMSDQoFbGV2ZWwYASABKAUSEgoKZXhwZXJpZW5jZRgCIAEoBRIW",
            "Cg5tb25zdGVyc19zbGFpbhgDIAEoBRIOCgZhdHRhY2sYBCABKAUSDwoHZGVm",
            "ZW5zZRgFIAEoBRIWCg5jdXJyZW50X2hlYWx0aBgGIAEoBRISCgptYXhfaGVh",
            "bHRoGAcgASgFEhMKC2RlYXRoX2NvdW50GAggASgFEhoKEnR1cm5zX3NpbmNl",
            "X2pvaW5lZBgJIAEoBSKRAQoRUGxheWVyU3RhdHNCdW5kbGUSNgoFc3RhdHMY",
            "ASADKAsyJy5jaGFyYWN0ZXIuUGxheWVyU3RhdHNCdW5kbGUuU3RhdHNFbnRy",
            "eRpECgpTdGF0c0VudHJ5EgsKA2tleRgBIAEoCRIlCgV2YWx1ZRgCIAEoCzIW",
            "LmNoYXJhY3Rlci5QbGF5ZXJTdGF0czoCOAEiMgoIUG9zaXRpb24SEAoIYm9h",
            "cmRfaWQYASABKAkSCQoBeBgCIAEoBRIJCgF5GAMgASgFIoABChFDaGFyYWN0",
            "ZXJEZWNpc2lvbhIuCg1kZWNpc2lvbl90eXBlGAEgASgOMhcuY2hhcmFjdGVy",
            "LkRlY2lzaW9uVHlwZRIsCg90YXJnZXRfcG9zaXRpb24YAiABKAsyEy5jaGFy",
            "YWN0ZXIuUG9zaXRpb24SDQoFaW5kZXgYAyABKAUqWwoMRGVjaXNpb25UeXBl",
            "EggKBE5PTkUQABIICgRNT1ZFEAESCgoGQVRUQUNLEAISCgoGUE9SVEFMEAMS",
            "CAoERFJPUBAEEgkKBUVRVUlQEAUSCgoGUElDS1VQEAZCQgoebWVjaC5tYW5p",
            "YS5lbmdpbmUuZG9tYWluLm1vZGVsQg9DaGFyYWN0ZXJQcm90b3OqAg5NTTI2",
            "LklPLk1vZGVsc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MM26.IO.Models.ItemReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MM26.IO.Models.DecisionType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Character), global::MM26.IO.Models.Character.Parser, new[]{ "CurrentHealth", "BaseMaxHealth", "Experience", "Level", "BaseSpeed", "Position", "SpawnPoint", "Weapon", "ActiveEffectsTempStatusModifier", "ActiveEffectsSource", "ActiveEffectsIsPlayer", "TaggedPlayersDamage", "IsDead", "TicksSinceDeath", "Name", "BaseAttack", "BaseDefense", "Sprite" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Monster), global::MM26.IO.Models.Monster.Parser, new[]{ "Character", "Drops", "AggroRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Player), global::MM26.IO.Models.Player.Parser, new[]{ "Character", "Hat", "Clothes", "Shoes", "Accessory", "Inventory", "BottomSprite", "TopSprite", "HeadSprite" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.PlayerStats), global::MM26.IO.Models.PlayerStats.Parser, new[]{ "Level", "Experience", "MonstersSlain", "Attack", "Defense", "CurrentHealth", "MaxHealth", "DeathCount", "TurnsSinceJoined" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.PlayerStatsBundle), global::MM26.IO.Models.PlayerStatsBundle.Parser, new[]{ "Stats" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Position), global::MM26.IO.Models.Position.Parser, new[]{ "BoardId", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.CharacterDecision), global::MM26.IO.Models.CharacterDecision.Parser, new[]{ "DecisionType", "TargetPosition", "Index" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum DecisionType {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("MOVE")] Move = 1,
    [pbr::OriginalName("ATTACK")] Attack = 2,
    [pbr::OriginalName("PORTAL")] Portal = 3,
    [pbr::OriginalName("DROP")] Drop = 4,
    [pbr::OriginalName("EQUIP")] Equip = 5,
    [pbr::OriginalName("PICKUP")] Pickup = 6,
  }

  #endregion

  #region Messages
  public sealed partial class Character : pb::IMessage<Character>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Character> _parser = new pb::MessageParser<Character>(() => new Character());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Character> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.CharacterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character(Character other) : this() {
      currentHealth_ = other.currentHealth_;
      baseMaxHealth_ = other.baseMaxHealth_;
      experience_ = other.experience_;
      level_ = other.level_;
      baseSpeed_ = other.baseSpeed_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      spawnPoint_ = other.spawnPoint_ != null ? other.spawnPoint_.Clone() : null;
      weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
      activeEffectsTempStatusModifier_ = other.activeEffectsTempStatusModifier_.Clone();
      activeEffectsSource_ = other.activeEffectsSource_.Clone();
      activeEffectsIsPlayer_ = other.activeEffectsIsPlayer_.Clone();
      taggedPlayersDamage_ = other.taggedPlayersDamage_.Clone();
      isDead_ = other.isDead_;
      ticksSinceDeath_ = other.ticksSinceDeath_;
      name_ = other.name_;
      baseAttack_ = other.baseAttack_;
      baseDefense_ = other.baseDefense_;
      sprite_ = other.sprite_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character Clone() {
      return new Character(this);
    }

    /// <summary>Field number for the "current_health" field.</summary>
    public const int CurrentHealthFieldNumber = 1;
    private int currentHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentHealth {
      get { return currentHealth_; }
      set {
        currentHealth_ = value;
      }
    }

    /// <summary>Field number for the "base_max_health" field.</summary>
    public const int BaseMaxHealthFieldNumber = 2;
    private int baseMaxHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseMaxHealth {
      get { return baseMaxHealth_; }
      set {
        baseMaxHealth_ = value;
      }
    }

    /// <summary>Field number for the "experience" field.</summary>
    public const int ExperienceFieldNumber = 3;
    private int experience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Experience {
      get { return experience_; }
      set {
        experience_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "base_speed" field.</summary>
    public const int BaseSpeedFieldNumber = 5;
    private int baseSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseSpeed {
      get { return baseSpeed_; }
      set {
        baseSpeed_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 6;
    private global::MM26.IO.Models.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "spawn_point" field.</summary>
    public const int SpawnPointFieldNumber = 7;
    private global::MM26.IO.Models.Position spawnPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Position SpawnPoint {
      get { return spawnPoint_; }
      set {
        spawnPoint_ = value;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 8;
    private global::MM26.IO.Models.Weapon weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Weapon Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    /// <summary>Field number for the "active_effects_temp_status_modifier" field.</summary>
    public const int ActiveEffectsTempStatusModifierFieldNumber = 9;
    private static readonly pb::FieldCodec<global::MM26.IO.Models.TempStatusModifier> _repeated_activeEffectsTempStatusModifier_codec
        = pb::FieldCodec.ForMessage(74, global::MM26.IO.Models.TempStatusModifier.Parser);
    private readonly pbc::RepeatedField<global::MM26.IO.Models.TempStatusModifier> activeEffectsTempStatusModifier_ = new pbc::RepeatedField<global::MM26.IO.Models.TempStatusModifier>();
    /// <summary>
    /// Parallel arrays to be stored as a triple
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MM26.IO.Models.TempStatusModifier> ActiveEffectsTempStatusModifier {
      get { return activeEffectsTempStatusModifier_; }
    }

    /// <summary>Field number for the "active_effects_source" field.</summary>
    public const int ActiveEffectsSourceFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_activeEffectsSource_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> activeEffectsSource_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ActiveEffectsSource {
      get { return activeEffectsSource_; }
    }

    /// <summary>Field number for the "active_effects_is_player" field.</summary>
    public const int ActiveEffectsIsPlayerFieldNumber = 11;
    private static readonly pb::FieldCodec<bool> _repeated_activeEffectsIsPlayer_codec
        = pb::FieldCodec.ForBool(90);
    private readonly pbc::RepeatedField<bool> activeEffectsIsPlayer_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> ActiveEffectsIsPlayer {
      get { return activeEffectsIsPlayer_; }
    }

    /// <summary>Field number for the "tagged_players_damage" field.</summary>
    public const int TaggedPlayersDamageFieldNumber = 12;
    private static readonly pbc::MapField<string, int>.Codec _map_taggedPlayersDamage_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 98);
    private readonly pbc::MapField<string, int> taggedPlayersDamage_ = new pbc::MapField<string, int>();
    /// <summary>
    /// Maps from player name to damage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> TaggedPlayersDamage {
      get { return taggedPlayersDamage_; }
    }

    /// <summary>Field number for the "is_dead" field.</summary>
    public const int IsDeadFieldNumber = 13;
    private bool isDead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDead {
      get { return isDead_; }
      set {
        isDead_ = value;
      }
    }

    /// <summary>Field number for the "ticks_since_death" field.</summary>
    public const int TicksSinceDeathFieldNumber = 14;
    private int ticksSinceDeath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TicksSinceDeath {
      get { return ticksSinceDeath_; }
      set {
        ticksSinceDeath_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 15;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_attack" field.</summary>
    public const int BaseAttackFieldNumber = 16;
    private int baseAttack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseAttack {
      get { return baseAttack_; }
      set {
        baseAttack_ = value;
      }
    }

    /// <summary>Field number for the "base_defense" field.</summary>
    public const int BaseDefenseFieldNumber = 17;
    private int baseDefense_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseDefense {
      get { return baseDefense_; }
      set {
        baseDefense_ = value;
      }
    }

    /// <summary>Field number for the "sprite" field.</summary>
    public const int SpriteFieldNumber = 18;
    private string sprite_ = "";
    /// <summary>
    /// Filepath to sprite for this character
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sprite {
      get { return sprite_; }
      set {
        sprite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Character);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Character other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentHealth != other.CurrentHealth) return false;
      if (BaseMaxHealth != other.BaseMaxHealth) return false;
      if (Experience != other.Experience) return false;
      if (Level != other.Level) return false;
      if (BaseSpeed != other.BaseSpeed) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(SpawnPoint, other.SpawnPoint)) return false;
      if (!object.Equals(Weapon, other.Weapon)) return false;
      if(!activeEffectsTempStatusModifier_.Equals(other.activeEffectsTempStatusModifier_)) return false;
      if(!activeEffectsSource_.Equals(other.activeEffectsSource_)) return false;
      if(!activeEffectsIsPlayer_.Equals(other.activeEffectsIsPlayer_)) return false;
      if (!TaggedPlayersDamage.Equals(other.TaggedPlayersDamage)) return false;
      if (IsDead != other.IsDead) return false;
      if (TicksSinceDeath != other.TicksSinceDeath) return false;
      if (Name != other.Name) return false;
      if (BaseAttack != other.BaseAttack) return false;
      if (BaseDefense != other.BaseDefense) return false;
      if (Sprite != other.Sprite) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentHealth != 0) hash ^= CurrentHealth.GetHashCode();
      if (BaseMaxHealth != 0) hash ^= BaseMaxHealth.GetHashCode();
      if (Experience != 0) hash ^= Experience.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (BaseSpeed != 0) hash ^= BaseSpeed.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (spawnPoint_ != null) hash ^= SpawnPoint.GetHashCode();
      if (weapon_ != null) hash ^= Weapon.GetHashCode();
      hash ^= activeEffectsTempStatusModifier_.GetHashCode();
      hash ^= activeEffectsSource_.GetHashCode();
      hash ^= activeEffectsIsPlayer_.GetHashCode();
      hash ^= TaggedPlayersDamage.GetHashCode();
      if (IsDead != false) hash ^= IsDead.GetHashCode();
      if (TicksSinceDeath != 0) hash ^= TicksSinceDeath.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BaseAttack != 0) hash ^= BaseAttack.GetHashCode();
      if (BaseDefense != 0) hash ^= BaseDefense.GetHashCode();
      if (Sprite.Length != 0) hash ^= Sprite.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurrentHealth != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentHealth);
      }
      if (BaseMaxHealth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BaseMaxHealth);
      }
      if (Experience != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Experience);
      }
      if (Level != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      if (BaseSpeed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BaseSpeed);
      }
      if (position_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Position);
      }
      if (spawnPoint_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SpawnPoint);
      }
      if (weapon_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Weapon);
      }
      activeEffectsTempStatusModifier_.WriteTo(output, _repeated_activeEffectsTempStatusModifier_codec);
      activeEffectsSource_.WriteTo(output, _repeated_activeEffectsSource_codec);
      activeEffectsIsPlayer_.WriteTo(output, _repeated_activeEffectsIsPlayer_codec);
      taggedPlayersDamage_.WriteTo(output, _map_taggedPlayersDamage_codec);
      if (IsDead != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsDead);
      }
      if (TicksSinceDeath != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(TicksSinceDeath);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Name);
      }
      if (BaseAttack != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(BaseAttack);
      }
      if (BaseDefense != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BaseDefense);
      }
      if (Sprite.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Sprite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentHealth);
      }
      if (BaseMaxHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseMaxHealth);
      }
      if (Experience != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Experience);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (BaseSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseSpeed);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (spawnPoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpawnPoint);
      }
      if (weapon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      size += activeEffectsTempStatusModifier_.CalculateSize(_repeated_activeEffectsTempStatusModifier_codec);
      size += activeEffectsSource_.CalculateSize(_repeated_activeEffectsSource_codec);
      size += activeEffectsIsPlayer_.CalculateSize(_repeated_activeEffectsIsPlayer_codec);
      size += taggedPlayersDamage_.CalculateSize(_map_taggedPlayersDamage_codec);
      if (IsDead != false) {
        size += 1 + 1;
      }
      if (TicksSinceDeath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TicksSinceDeath);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BaseAttack != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BaseAttack);
      }
      if (BaseDefense != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BaseDefense);
      }
      if (Sprite.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Sprite);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Character other) {
      if (other == null) {
        return;
      }
      if (other.CurrentHealth != 0) {
        CurrentHealth = other.CurrentHealth;
      }
      if (other.BaseMaxHealth != 0) {
        BaseMaxHealth = other.BaseMaxHealth;
      }
      if (other.Experience != 0) {
        Experience = other.Experience;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.BaseSpeed != 0) {
        BaseSpeed = other.BaseSpeed;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::MM26.IO.Models.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.spawnPoint_ != null) {
        if (spawnPoint_ == null) {
          SpawnPoint = new global::MM26.IO.Models.Position();
        }
        SpawnPoint.MergeFrom(other.SpawnPoint);
      }
      if (other.weapon_ != null) {
        if (weapon_ == null) {
          Weapon = new global::MM26.IO.Models.Weapon();
        }
        Weapon.MergeFrom(other.Weapon);
      }
      activeEffectsTempStatusModifier_.Add(other.activeEffectsTempStatusModifier_);
      activeEffectsSource_.Add(other.activeEffectsSource_);
      activeEffectsIsPlayer_.Add(other.activeEffectsIsPlayer_);
      taggedPlayersDamage_.Add(other.taggedPlayersDamage_);
      if (other.IsDead != false) {
        IsDead = other.IsDead;
      }
      if (other.TicksSinceDeath != 0) {
        TicksSinceDeath = other.TicksSinceDeath;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BaseAttack != 0) {
        BaseAttack = other.BaseAttack;
      }
      if (other.BaseDefense != 0) {
        BaseDefense = other.BaseDefense;
      }
      if (other.Sprite.Length != 0) {
        Sprite = other.Sprite;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentHealth = input.ReadInt32();
            break;
          }
          case 16: {
            BaseMaxHealth = input.ReadInt32();
            break;
          }
          case 24: {
            Experience = input.ReadInt32();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 40: {
            BaseSpeed = input.ReadInt32();
            break;
          }
          case 50: {
            if (position_ == null) {
              Position = new global::MM26.IO.Models.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 58: {
            if (spawnPoint_ == null) {
              SpawnPoint = new global::MM26.IO.Models.Position();
            }
            input.ReadMessage(SpawnPoint);
            break;
          }
          case 66: {
            if (weapon_ == null) {
              Weapon = new global::MM26.IO.Models.Weapon();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 74: {
            activeEffectsTempStatusModifier_.AddEntriesFrom(input, _repeated_activeEffectsTempStatusModifier_codec);
            break;
          }
          case 82: {
            activeEffectsSource_.AddEntriesFrom(input, _repeated_activeEffectsSource_codec);
            break;
          }
          case 90:
          case 88: {
            activeEffectsIsPlayer_.AddEntriesFrom(input, _repeated_activeEffectsIsPlayer_codec);
            break;
          }
          case 98: {
            taggedPlayersDamage_.AddEntriesFrom(input, _map_taggedPlayersDamage_codec);
            break;
          }
          case 104: {
            IsDead = input.ReadBool();
            break;
          }
          case 112: {
            TicksSinceDeath = input.ReadInt32();
            break;
          }
          case 122: {
            Name = input.ReadString();
            break;
          }
          case 128: {
            BaseAttack = input.ReadInt32();
            break;
          }
          case 136: {
            BaseDefense = input.ReadInt32();
            break;
          }
          case 146: {
            Sprite = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrentHealth = input.ReadInt32();
            break;
          }
          case 16: {
            BaseMaxHealth = input.ReadInt32();
            break;
          }
          case 24: {
            Experience = input.ReadInt32();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 40: {
            BaseSpeed = input.ReadInt32();
            break;
          }
          case 50: {
            if (position_ == null) {
              Position = new global::MM26.IO.Models.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 58: {
            if (spawnPoint_ == null) {
              SpawnPoint = new global::MM26.IO.Models.Position();
            }
            input.ReadMessage(SpawnPoint);
            break;
          }
          case 66: {
            if (weapon_ == null) {
              Weapon = new global::MM26.IO.Models.Weapon();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 74: {
            activeEffectsTempStatusModifier_.AddEntriesFrom(ref input, _repeated_activeEffectsTempStatusModifier_codec);
            break;
          }
          case 82: {
            activeEffectsSource_.AddEntriesFrom(ref input, _repeated_activeEffectsSource_codec);
            break;
          }
          case 90:
          case 88: {
            activeEffectsIsPlayer_.AddEntriesFrom(ref input, _repeated_activeEffectsIsPlayer_codec);
            break;
          }
          case 98: {
            taggedPlayersDamage_.AddEntriesFrom(ref input, _map_taggedPlayersDamage_codec);
            break;
          }
          case 104: {
            IsDead = input.ReadBool();
            break;
          }
          case 112: {
            TicksSinceDeath = input.ReadInt32();
            break;
          }
          case 122: {
            Name = input.ReadString();
            break;
          }
          case 128: {
            BaseAttack = input.ReadInt32();
            break;
          }
          case 136: {
            BaseDefense = input.ReadInt32();
            break;
          }
          case 146: {
            Sprite = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Monster : pb::IMessage<Monster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Monster> _parser = new pb::MessageParser<Monster>(() => new Monster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Monster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.CharacterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monster(Monster other) : this() {
      character_ = other.character_ != null ? other.character_.Clone() : null;
      drops_ = other.drops_.Clone();
      aggroRange_ = other.aggroRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monster Clone() {
      return new Monster(this);
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 1;
    private global::MM26.IO.Models.Character character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Character Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    /// <summary>Field number for the "drops" field.</summary>
    public const int DropsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MM26.IO.Models.Item> _repeated_drops_codec
        = pb::FieldCodec.ForMessage(18, global::MM26.IO.Models.Item.Parser);
    private readonly pbc::RepeatedField<global::MM26.IO.Models.Item> drops_ = new pbc::RepeatedField<global::MM26.IO.Models.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MM26.IO.Models.Item> Drops {
      get { return drops_; }
    }

    /// <summary>Field number for the "aggro_range" field.</summary>
    public const int AggroRangeFieldNumber = 3;
    private int aggroRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AggroRange {
      get { return aggroRange_; }
      set {
        aggroRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Monster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Monster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Character, other.Character)) return false;
      if(!drops_.Equals(other.drops_)) return false;
      if (AggroRange != other.AggroRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (character_ != null) hash ^= Character.GetHashCode();
      hash ^= drops_.GetHashCode();
      if (AggroRange != 0) hash ^= AggroRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (character_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Character);
      }
      drops_.WriteTo(output, _repeated_drops_codec);
      if (AggroRange != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AggroRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (character_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Character);
      }
      size += drops_.CalculateSize(_repeated_drops_codec);
      if (AggroRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AggroRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Monster other) {
      if (other == null) {
        return;
      }
      if (other.character_ != null) {
        if (character_ == null) {
          Character = new global::MM26.IO.Models.Character();
        }
        Character.MergeFrom(other.Character);
      }
      drops_.Add(other.drops_);
      if (other.AggroRange != 0) {
        AggroRange = other.AggroRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (character_ == null) {
              Character = new global::MM26.IO.Models.Character();
            }
            input.ReadMessage(Character);
            break;
          }
          case 18: {
            drops_.AddEntriesFrom(input, _repeated_drops_codec);
            break;
          }
          case 24: {
            AggroRange = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (character_ == null) {
              Character = new global::MM26.IO.Models.Character();
            }
            input.ReadMessage(Character);
            break;
          }
          case 18: {
            drops_.AddEntriesFrom(ref input, _repeated_drops_codec);
            break;
          }
          case 24: {
            AggroRange = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Player : pb::IMessage<Player>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.CharacterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player(Player other) : this() {
      character_ = other.character_ != null ? other.character_.Clone() : null;
      hat_ = other.hat_ != null ? other.hat_.Clone() : null;
      clothes_ = other.clothes_ != null ? other.clothes_.Clone() : null;
      shoes_ = other.shoes_ != null ? other.shoes_.Clone() : null;
      accessory_ = other.accessory_ != null ? other.accessory_.Clone() : null;
      inventory_ = other.inventory_.Clone();
      bottomSprite_ = other.bottomSprite_;
      topSprite_ = other.topSprite_;
      headSprite_ = other.headSprite_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Player Clone() {
      return new Player(this);
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 1;
    private global::MM26.IO.Models.Character character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Character Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    /// <summary>Field number for the "hat" field.</summary>
    public const int HatFieldNumber = 2;
    private global::MM26.IO.Models.Hat hat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Hat Hat {
      get { return hat_; }
      set {
        hat_ = value;
      }
    }

    /// <summary>Field number for the "clothes" field.</summary>
    public const int ClothesFieldNumber = 3;
    private global::MM26.IO.Models.Clothes clothes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Clothes Clothes {
      get { return clothes_; }
      set {
        clothes_ = value;
      }
    }

    /// <summary>Field number for the "shoes" field.</summary>
    public const int ShoesFieldNumber = 4;
    private global::MM26.IO.Models.Shoes shoes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Shoes Shoes {
      get { return shoes_; }
      set {
        shoes_ = value;
      }
    }

    /// <summary>Field number for the "accessory" field.</summary>
    public const int AccessoryFieldNumber = 5;
    private global::MM26.IO.Models.Accessory accessory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Accessory Accessory {
      get { return accessory_; }
      set {
        accessory_ = value;
      }
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 6;
    private static readonly pb::FieldCodec<global::MM26.IO.Models.Item> _repeated_inventory_codec
        = pb::FieldCodec.ForMessage(50, global::MM26.IO.Models.Item.Parser);
    private readonly pbc::RepeatedField<global::MM26.IO.Models.Item> inventory_ = new pbc::RepeatedField<global::MM26.IO.Models.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MM26.IO.Models.Item> Inventory {
      get { return inventory_; }
    }

    /// <summary>Field number for the "bottom_sprite" field.</summary>
    public const int BottomSpriteFieldNumber = 7;
    private string bottomSprite_ = "";
    /// <summary>
    /// Filepaths for other sprites
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BottomSprite {
      get { return bottomSprite_; }
      set {
        bottomSprite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "top_sprite" field.</summary>
    public const int TopSpriteFieldNumber = 8;
    private string topSprite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TopSprite {
      get { return topSprite_; }
      set {
        topSprite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "head_sprite" field.</summary>
    public const int HeadSpriteFieldNumber = 9;
    private string headSprite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadSprite {
      get { return headSprite_; }
      set {
        headSprite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Character, other.Character)) return false;
      if (!object.Equals(Hat, other.Hat)) return false;
      if (!object.Equals(Clothes, other.Clothes)) return false;
      if (!object.Equals(Shoes, other.Shoes)) return false;
      if (!object.Equals(Accessory, other.Accessory)) return false;
      if(!inventory_.Equals(other.inventory_)) return false;
      if (BottomSprite != other.BottomSprite) return false;
      if (TopSprite != other.TopSprite) return false;
      if (HeadSprite != other.HeadSprite) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (character_ != null) hash ^= Character.GetHashCode();
      if (hat_ != null) hash ^= Hat.GetHashCode();
      if (clothes_ != null) hash ^= Clothes.GetHashCode();
      if (shoes_ != null) hash ^= Shoes.GetHashCode();
      if (accessory_ != null) hash ^= Accessory.GetHashCode();
      hash ^= inventory_.GetHashCode();
      if (BottomSprite.Length != 0) hash ^= BottomSprite.GetHashCode();
      if (TopSprite.Length != 0) hash ^= TopSprite.GetHashCode();
      if (HeadSprite.Length != 0) hash ^= HeadSprite.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (character_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Character);
      }
      if (hat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Hat);
      }
      if (clothes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Clothes);
      }
      if (shoes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Shoes);
      }
      if (accessory_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Accessory);
      }
      inventory_.WriteTo(output, _repeated_inventory_codec);
      if (BottomSprite.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(BottomSprite);
      }
      if (TopSprite.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TopSprite);
      }
      if (HeadSprite.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HeadSprite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (character_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Character);
      }
      if (hat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hat);
      }
      if (clothes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clothes);
      }
      if (shoes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shoes);
      }
      if (accessory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Accessory);
      }
      size += inventory_.CalculateSize(_repeated_inventory_codec);
      if (BottomSprite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BottomSprite);
      }
      if (TopSprite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TopSprite);
      }
      if (HeadSprite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadSprite);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Player other) {
      if (other == null) {
        return;
      }
      if (other.character_ != null) {
        if (character_ == null) {
          Character = new global::MM26.IO.Models.Character();
        }
        Character.MergeFrom(other.Character);
      }
      if (other.hat_ != null) {
        if (hat_ == null) {
          Hat = new global::MM26.IO.Models.Hat();
        }
        Hat.MergeFrom(other.Hat);
      }
      if (other.clothes_ != null) {
        if (clothes_ == null) {
          Clothes = new global::MM26.IO.Models.Clothes();
        }
        Clothes.MergeFrom(other.Clothes);
      }
      if (other.shoes_ != null) {
        if (shoes_ == null) {
          Shoes = new global::MM26.IO.Models.Shoes();
        }
        Shoes.MergeFrom(other.Shoes);
      }
      if (other.accessory_ != null) {
        if (accessory_ == null) {
          Accessory = new global::MM26.IO.Models.Accessory();
        }
        Accessory.MergeFrom(other.Accessory);
      }
      inventory_.Add(other.inventory_);
      if (other.BottomSprite.Length != 0) {
        BottomSprite = other.BottomSprite;
      }
      if (other.TopSprite.Length != 0) {
        TopSprite = other.TopSprite;
      }
      if (other.HeadSprite.Length != 0) {
        HeadSprite = other.HeadSprite;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (character_ == null) {
              Character = new global::MM26.IO.Models.Character();
            }
            input.ReadMessage(Character);
            break;
          }
          case 18: {
            if (hat_ == null) {
              Hat = new global::MM26.IO.Models.Hat();
            }
            input.ReadMessage(Hat);
            break;
          }
          case 26: {
            if (clothes_ == null) {
              Clothes = new global::MM26.IO.Models.Clothes();
            }
            input.ReadMessage(Clothes);
            break;
          }
          case 34: {
            if (shoes_ == null) {
              Shoes = new global::MM26.IO.Models.Shoes();
            }
            input.ReadMessage(Shoes);
            break;
          }
          case 42: {
            if (accessory_ == null) {
              Accessory = new global::MM26.IO.Models.Accessory();
            }
            input.ReadMessage(Accessory);
            break;
          }
          case 50: {
            inventory_.AddEntriesFrom(input, _repeated_inventory_codec);
            break;
          }
          case 58: {
            BottomSprite = input.ReadString();
            break;
          }
          case 66: {
            TopSprite = input.ReadString();
            break;
          }
          case 74: {
            HeadSprite = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (character_ == null) {
              Character = new global::MM26.IO.Models.Character();
            }
            input.ReadMessage(Character);
            break;
          }
          case 18: {
            if (hat_ == null) {
              Hat = new global::MM26.IO.Models.Hat();
            }
            input.ReadMessage(Hat);
            break;
          }
          case 26: {
            if (clothes_ == null) {
              Clothes = new global::MM26.IO.Models.Clothes();
            }
            input.ReadMessage(Clothes);
            break;
          }
          case 34: {
            if (shoes_ == null) {
              Shoes = new global::MM26.IO.Models.Shoes();
            }
            input.ReadMessage(Shoes);
            break;
          }
          case 42: {
            if (accessory_ == null) {
              Accessory = new global::MM26.IO.Models.Accessory();
            }
            input.ReadMessage(Accessory);
            break;
          }
          case 50: {
            inventory_.AddEntriesFrom(ref input, _repeated_inventory_codec);
            break;
          }
          case 58: {
            BottomSprite = input.ReadString();
            break;
          }
          case 66: {
            TopSprite = input.ReadString();
            break;
          }
          case 74: {
            HeadSprite = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerStats : pb::IMessage<PlayerStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStats> _parser = new pb::MessageParser<PlayerStats>(() => new PlayerStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.CharacterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats(PlayerStats other) : this() {
      level_ = other.level_;
      experience_ = other.experience_;
      monstersSlain_ = other.monstersSlain_;
      attack_ = other.attack_;
      defense_ = other.defense_;
      currentHealth_ = other.currentHealth_;
      maxHealth_ = other.maxHealth_;
      deathCount_ = other.deathCount_;
      turnsSinceJoined_ = other.turnsSinceJoined_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats Clone() {
      return new PlayerStats(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "experience" field.</summary>
    public const int ExperienceFieldNumber = 2;
    private int experience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Experience {
      get { return experience_; }
      set {
        experience_ = value;
      }
    }

    /// <summary>Field number for the "monsters_slain" field.</summary>
    public const int MonstersSlainFieldNumber = 3;
    private int monstersSlain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonstersSlain {
      get { return monstersSlain_; }
      set {
        monstersSlain_ = value;
      }
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 4;
    private int attack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Attack {
      get { return attack_; }
      set {
        attack_ = value;
      }
    }

    /// <summary>Field number for the "defense" field.</summary>
    public const int DefenseFieldNumber = 5;
    private int defense_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Defense {
      get { return defense_; }
      set {
        defense_ = value;
      }
    }

    /// <summary>Field number for the "current_health" field.</summary>
    public const int CurrentHealthFieldNumber = 6;
    private int currentHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentHealth {
      get { return currentHealth_; }
      set {
        currentHealth_ = value;
      }
    }

    /// <summary>Field number for the "max_health" field.</summary>
    public const int MaxHealthFieldNumber = 7;
    private int maxHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxHealth {
      get { return maxHealth_; }
      set {
        maxHealth_ = value;
      }
    }

    /// <summary>Field number for the "death_count" field.</summary>
    public const int DeathCountFieldNumber = 8;
    private int deathCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeathCount {
      get { return deathCount_; }
      set {
        deathCount_ = value;
      }
    }

    /// <summary>Field number for the "turns_since_joined" field.</summary>
    public const int TurnsSinceJoinedFieldNumber = 9;
    private int turnsSinceJoined_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TurnsSinceJoined {
      get { return turnsSinceJoined_; }
      set {
        turnsSinceJoined_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Experience != other.Experience) return false;
      if (MonstersSlain != other.MonstersSlain) return false;
      if (Attack != other.Attack) return false;
      if (Defense != other.Defense) return false;
      if (CurrentHealth != other.CurrentHealth) return false;
      if (MaxHealth != other.MaxHealth) return false;
      if (DeathCount != other.DeathCount) return false;
      if (TurnsSinceJoined != other.TurnsSinceJoined) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Experience != 0) hash ^= Experience.GetHashCode();
      if (MonstersSlain != 0) hash ^= MonstersSlain.GetHashCode();
      if (Attack != 0) hash ^= Attack.GetHashCode();
      if (Defense != 0) hash ^= Defense.GetHashCode();
      if (CurrentHealth != 0) hash ^= CurrentHealth.GetHashCode();
      if (MaxHealth != 0) hash ^= MaxHealth.GetHashCode();
      if (DeathCount != 0) hash ^= DeathCount.GetHashCode();
      if (TurnsSinceJoined != 0) hash ^= TurnsSinceJoined.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (Experience != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Experience);
      }
      if (MonstersSlain != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MonstersSlain);
      }
      if (Attack != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Attack);
      }
      if (Defense != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Defense);
      }
      if (CurrentHealth != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CurrentHealth);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxHealth);
      }
      if (DeathCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DeathCount);
      }
      if (TurnsSinceJoined != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TurnsSinceJoined);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Experience != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Experience);
      }
      if (MonstersSlain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonstersSlain);
      }
      if (Attack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attack);
      }
      if (Defense != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Defense);
      }
      if (CurrentHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentHealth);
      }
      if (MaxHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxHealth);
      }
      if (DeathCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeathCount);
      }
      if (TurnsSinceJoined != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TurnsSinceJoined);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStats other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Experience != 0) {
        Experience = other.Experience;
      }
      if (other.MonstersSlain != 0) {
        MonstersSlain = other.MonstersSlain;
      }
      if (other.Attack != 0) {
        Attack = other.Attack;
      }
      if (other.Defense != 0) {
        Defense = other.Defense;
      }
      if (other.CurrentHealth != 0) {
        CurrentHealth = other.CurrentHealth;
      }
      if (other.MaxHealth != 0) {
        MaxHealth = other.MaxHealth;
      }
      if (other.DeathCount != 0) {
        DeathCount = other.DeathCount;
      }
      if (other.TurnsSinceJoined != 0) {
        TurnsSinceJoined = other.TurnsSinceJoined;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            Experience = input.ReadInt32();
            break;
          }
          case 24: {
            MonstersSlain = input.ReadInt32();
            break;
          }
          case 32: {
            Attack = input.ReadInt32();
            break;
          }
          case 40: {
            Defense = input.ReadInt32();
            break;
          }
          case 48: {
            CurrentHealth = input.ReadInt32();
            break;
          }
          case 56: {
            MaxHealth = input.ReadInt32();
            break;
          }
          case 64: {
            DeathCount = input.ReadInt32();
            break;
          }
          case 72: {
            TurnsSinceJoined = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            Experience = input.ReadInt32();
            break;
          }
          case 24: {
            MonstersSlain = input.ReadInt32();
            break;
          }
          case 32: {
            Attack = input.ReadInt32();
            break;
          }
          case 40: {
            Defense = input.ReadInt32();
            break;
          }
          case 48: {
            CurrentHealth = input.ReadInt32();
            break;
          }
          case 56: {
            MaxHealth = input.ReadInt32();
            break;
          }
          case 64: {
            DeathCount = input.ReadInt32();
            break;
          }
          case 72: {
            TurnsSinceJoined = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerStatsBundle : pb::IMessage<PlayerStatsBundle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStatsBundle> _parser = new pb::MessageParser<PlayerStatsBundle>(() => new PlayerStatsBundle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStatsBundle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.CharacterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStatsBundle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStatsBundle(PlayerStatsBundle other) : this() {
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStatsBundle Clone() {
      return new PlayerStatsBundle(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::MM26.IO.Models.PlayerStats>.Codec _map_stats_codec
        = new pbc::MapField<string, global::MM26.IO.Models.PlayerStats>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::MM26.IO.Models.PlayerStats.Parser), 10);
    private readonly pbc::MapField<string, global::MM26.IO.Models.PlayerStats> stats_ = new pbc::MapField<string, global::MM26.IO.Models.PlayerStats>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::MM26.IO.Models.PlayerStats> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStatsBundle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStatsBundle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Stats.Equals(other.Stats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Stats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stats_.WriteTo(output, _map_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stats_.CalculateSize(_map_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStatsBundle other) {
      if (other == null) {
        return;
      }
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stats_.AddEntriesFrom(input, _map_stats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stats_.AddEntriesFrom(ref input, _map_stats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.CharacterReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      boardId_ = other.boardId_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "board_id" field.</summary>
    public const int BoardIdFieldNumber = 1;
    private string boardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BoardId {
      get { return boardId_; }
      set {
        boardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoardId != other.BoardId) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BoardId.Length != 0) hash ^= BoardId.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BoardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BoardId);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BoardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoardId);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.BoardId.Length != 0) {
        BoardId = other.BoardId;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BoardId = input.ReadString();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BoardId = input.ReadString();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Proto sent from player to engine and from engine to visualizer
  /// </summary>
  public sealed partial class CharacterDecision : pb::IMessage<CharacterDecision>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterDecision> _parser = new pb::MessageParser<CharacterDecision>(() => new CharacterDecision());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CharacterDecision> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.CharacterReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterDecision() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterDecision(CharacterDecision other) : this() {
      decisionType_ = other.decisionType_;
      targetPosition_ = other.targetPosition_ != null ? other.targetPosition_.Clone() : null;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterDecision Clone() {
      return new CharacterDecision(this);
    }

    /// <summary>Field number for the "decision_type" field.</summary>
    public const int DecisionTypeFieldNumber = 1;
    private global::MM26.IO.Models.DecisionType decisionType_ = global::MM26.IO.Models.DecisionType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.DecisionType DecisionType {
      get { return decisionType_; }
      set {
        decisionType_ = value;
      }
    }

    /// <summary>Field number for the "target_position" field.</summary>
    public const int TargetPositionFieldNumber = 2;
    private global::MM26.IO.Models.Position targetPosition_;
    /// <summary>
    /// For MOVE, ATTACK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Position TargetPosition {
      get { return targetPosition_; }
      set {
        targetPosition_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    /// <summary>
    /// For TRAVEL, DROP, EQUIP, PICKUP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CharacterDecision);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CharacterDecision other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DecisionType != other.DecisionType) return false;
      if (!object.Equals(TargetPosition, other.TargetPosition)) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DecisionType != global::MM26.IO.Models.DecisionType.None) hash ^= DecisionType.GetHashCode();
      if (targetPosition_ != null) hash ^= TargetPosition.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DecisionType != global::MM26.IO.Models.DecisionType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DecisionType);
      }
      if (targetPosition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetPosition);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DecisionType != global::MM26.IO.Models.DecisionType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DecisionType);
      }
      if (targetPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetPosition);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CharacterDecision other) {
      if (other == null) {
        return;
      }
      if (other.DecisionType != global::MM26.IO.Models.DecisionType.None) {
        DecisionType = other.DecisionType;
      }
      if (other.targetPosition_ != null) {
        if (targetPosition_ == null) {
          TargetPosition = new global::MM26.IO.Models.Position();
        }
        TargetPosition.MergeFrom(other.TargetPosition);
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DecisionType = (global::MM26.IO.Models.DecisionType) input.ReadEnum();
            break;
          }
          case 18: {
            if (targetPosition_ == null) {
              TargetPosition = new global::MM26.IO.Models.Position();
            }
            input.ReadMessage(TargetPosition);
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DecisionType = (global::MM26.IO.Models.DecisionType) input.ReadEnum();
            break;
          }
          case 18: {
            if (targetPosition_ == null) {
              TargetPosition = new global::MM26.IO.Models.Position();
            }
            input.ReadMessage(TargetPosition);
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code

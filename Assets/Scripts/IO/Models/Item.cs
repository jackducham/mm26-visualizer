// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: item.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MM26.IO.Models {

  /// <summary>Holder for reflection information generated from item.proto</summary>
  public static partial class ItemReflection {

    #region Descriptor
    /// <summary>File descriptor for item.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgppdGVtLnByb3RvEgRpdGVtIugBCgRJdGVtEhEKCW1heF9zdGFjaxgBIAEo",
            "BRIjCgVzdGF0cxgCIAEoCzIULml0ZW0uU3RhdHVzTW9kaWZpZXISIAoHY2xv",
            "dGhlcxgDIAEoCzINLml0ZW0uQ2xvdGhlc0gAEhgKA2hhdBgEIAEoCzIJLml0",
            "ZW0uSGF0SAASHAoFc2hvZXMYBSABKAsyCy5pdGVtLlNob2VzSAASHgoGd2Vh",
            "cG9uGAYgASgLMgwuaXRlbS5XZWFwb25IABImCgpjb25zdW1hYmxlGAcgASgL",
            "MhAuaXRlbS5Db25zdW1hYmxlSABCBgoEaXRlbSIuCgdDbG90aGVzEiMKBXN0",
            "YXRzGAEgASgLMhQuaXRlbS5TdGF0dXNNb2RpZmllciJqCgNIYXQSIwoFc3Rh",
            "dHMYASABKAsyFC5pdGVtLlN0YXR1c01vZGlmaWVyEicKCmhhdF9lZmZlY3QY",
            "AiABKA4yEy5pdGVtLkhhdC5IYXRFZmZlY3QiFQoJSGF0RWZmZWN0EggKBFRF",
            "U1QQACIsCgVTaG9lcxIjCgVzdGF0cxgBIAEoCzIULml0ZW0uU3RhdHVzTW9k",
            "aWZpZXIiswEKBldlYXBvbhIjCgVzdGF0cxgBIAEoCzIULml0ZW0uU3RhdHVz",
            "TW9kaWZpZXISDQoFcmFuZ2UYAiABKAUSFQoNc3BsYXNoX3JhZGl1cxgDIAEo",
            "BRIUCgxtYWdpY19kYW1hZ2UYBCABKAUSFwoPcGh5c2ljYWxfZGFtYWdlGAUg",
            "ASgFEi8KDW9uX2hpdF9lZmZlY3QYBiABKAsyGC5pdGVtLlRlbXBTdGF0dXNN",
            "b2RpZmllciJGCgpDb25zdW1hYmxlEigKBmVmZmVjdBgBIAEoCzIYLml0ZW0u",
            "VGVtcFN0YXR1c01vZGlmaWVyEg4KBnN0YWNrcxgCIAEoBSKQBAoOU3RhdHVz",
            "TW9kaWZpZXISGQoRZmxhdF9zcGVlZF9jaGFuZ2UYASABKAUSHAoUcGVyY2Vu",
            "dF9zcGVlZF9jaGFuZ2UYAiABKAISGgoSZmxhdF9oZWFsdGhfY2hhbmdlGAMg",
            "ASgFEh0KFXBlcmNlbnRfaGVhbHRoX2NoYW5nZRgEIAEoAhIeChZmbGF0X2V4",
            "cGVyaWVuY2VfY2hhbmdlGAUgASgFEiEKGXBlcmNlbnRfZXhwZXJpZW5jZV9j",
            "aGFuZ2UYBiABKAISIAoYZmxhdF9tYWdpY19kYW1hZ2VfY2hhbmdlGAcgASgF",
            "EiMKG3BlcmNlbnRfbWFnaWNfZGFtYWdlX2NoYW5nZRgIIAEoAhIjChtmbGF0",
            "X3BoeXNpY2FsX2RhbWFnZV9jaGFuZ2UYCSABKAUSJgoecGVyY2VudF9waHlz",
            "aWNhbF9kYW1hZ2VfY2hhbmdlGAogASgCEiEKGWZsYXRfbWFnaWNfZGVmZW5z",
            "ZV9jaGFuZ2UYCyABKAUSJAoccGVyY2VudF9tYWdpY19kZWZlbnNlX2NoYW5n",
            "ZRgMIAEoAhIkChxmbGF0X3BoeXNpY2FsX2RlZmVuc2VfY2hhbmdlGA0gASgF",
            "EicKH3BlcmNlbnRfcGh5c2ljYWxfZGVmZW5zZV9jaGFuZ2UYDiABKAISGwoT",
            "ZmxhdF9yZWdlbl9wZXJfdHVybhgPIAEoBSK1AQoSVGVtcFN0YXR1c01vZGlm",
            "aWVyEiMKBXN0YXRzGAEgASgLMhQuaXRlbS5TdGF0dXNNb2RpZmllchIkChxm",
            "bGF0X21hZ2ljYWxfZGFtYWdlX3Blcl90dXJuGAIgASgFEiUKHWZsYXRfcGh5",
            "c2ljYWxfZGFtYWdlX3Blcl90dXJuGAMgASgFEhsKE2ZsYXRfcmVnZW5fcGVy",
            "X3R1cm4YBCABKAUSEAoIZHVyYXRpb24YBSABKAVCOwocbWVjaC5tYW5pYS5l",
            "bmdpbmUuZ2FtZS5pdGVtc0IKSXRlbVByb3Rvc6oCDk1NMjYuSU8uTW9kZWxz",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Item), global::MM26.IO.Models.Item.Parser, new[]{ "MaxStack", "Stats", "Clothes", "Hat", "Shoes", "Weapon", "Consumable" }, new[]{ "Item" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Clothes), global::MM26.IO.Models.Clothes.Parser, new[]{ "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Hat), global::MM26.IO.Models.Hat.Parser, new[]{ "Stats", "HatEffect" }, null, new[]{ typeof(global::MM26.IO.Models.Hat.Types.HatEffect) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Shoes), global::MM26.IO.Models.Shoes.Parser, new[]{ "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Weapon), global::MM26.IO.Models.Weapon.Parser, new[]{ "Stats", "Range", "SplashRadius", "MagicDamage", "PhysicalDamage", "OnHitEffect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.Consumable), global::MM26.IO.Models.Consumable.Parser, new[]{ "Effect", "Stacks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.StatusModifier), global::MM26.IO.Models.StatusModifier.Parser, new[]{ "FlatSpeedChange", "PercentSpeedChange", "FlatHealthChange", "PercentHealthChange", "FlatExperienceChange", "PercentExperienceChange", "FlatMagicDamageChange", "PercentMagicDamageChange", "FlatPhysicalDamageChange", "PercentPhysicalDamageChange", "FlatMagicDefenseChange", "PercentMagicDefenseChange", "FlatPhysicalDefenseChange", "PercentPhysicalDefenseChange", "FlatRegenPerTurn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MM26.IO.Models.TempStatusModifier), global::MM26.IO.Models.TempStatusModifier.Parser, new[]{ "Stats", "FlatMagicalDamagePerTurn", "FlatPhysicalDamagePerTurn", "FlatRegenPerTurn", "Duration" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Item : pb::IMessage<Item>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.ItemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      maxStack_ = other.maxStack_;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      switch (other.ItemCase) {
        case ItemOneofCase.Clothes:
          Clothes = other.Clothes.Clone();
          break;
        case ItemOneofCase.Hat:
          Hat = other.Hat.Clone();
          break;
        case ItemOneofCase.Shoes:
          Shoes = other.Shoes.Clone();
          break;
        case ItemOneofCase.Weapon:
          Weapon = other.Weapon.Clone();
          break;
        case ItemOneofCase.Consumable:
          Consumable = other.Consumable.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "max_stack" field.</summary>
    public const int MaxStackFieldNumber = 1;
    private int maxStack_;
    /// <summary>
    /// Stand-in for inheritance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxStack {
      get { return maxStack_; }
      set {
        maxStack_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 2;
    private global::MM26.IO.Models.StatusModifier stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.StatusModifier Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "clothes" field.</summary>
    public const int ClothesFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Clothes Clothes {
      get { return itemCase_ == ItemOneofCase.Clothes ? (global::MM26.IO.Models.Clothes) item_ : null; }
      set {
        item_ = value;
        itemCase_ = value == null ? ItemOneofCase.None : ItemOneofCase.Clothes;
      }
    }

    /// <summary>Field number for the "hat" field.</summary>
    public const int HatFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Hat Hat {
      get { return itemCase_ == ItemOneofCase.Hat ? (global::MM26.IO.Models.Hat) item_ : null; }
      set {
        item_ = value;
        itemCase_ = value == null ? ItemOneofCase.None : ItemOneofCase.Hat;
      }
    }

    /// <summary>Field number for the "shoes" field.</summary>
    public const int ShoesFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Shoes Shoes {
      get { return itemCase_ == ItemOneofCase.Shoes ? (global::MM26.IO.Models.Shoes) item_ : null; }
      set {
        item_ = value;
        itemCase_ = value == null ? ItemOneofCase.None : ItemOneofCase.Shoes;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Weapon Weapon {
      get { return itemCase_ == ItemOneofCase.Weapon ? (global::MM26.IO.Models.Weapon) item_ : null; }
      set {
        item_ = value;
        itemCase_ = value == null ? ItemOneofCase.None : ItemOneofCase.Weapon;
      }
    }

    /// <summary>Field number for the "consumable" field.</summary>
    public const int ConsumableFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Consumable Consumable {
      get { return itemCase_ == ItemOneofCase.Consumable ? (global::MM26.IO.Models.Consumable) item_ : null; }
      set {
        item_ = value;
        itemCase_ = value == null ? ItemOneofCase.None : ItemOneofCase.Consumable;
      }
    }

    private object item_;
    /// <summary>Enum of possible cases for the "item" oneof.</summary>
    public enum ItemOneofCase {
      None = 0,
      Clothes = 3,
      Hat = 4,
      Shoes = 5,
      Weapon = 6,
      Consumable = 7,
    }
    private ItemOneofCase itemCase_ = ItemOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemOneofCase ItemCase {
      get { return itemCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItem() {
      itemCase_ = ItemOneofCase.None;
      item_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxStack != other.MaxStack) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      if (!object.Equals(Clothes, other.Clothes)) return false;
      if (!object.Equals(Hat, other.Hat)) return false;
      if (!object.Equals(Shoes, other.Shoes)) return false;
      if (!object.Equals(Weapon, other.Weapon)) return false;
      if (!object.Equals(Consumable, other.Consumable)) return false;
      if (ItemCase != other.ItemCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxStack != 0) hash ^= MaxStack.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (itemCase_ == ItemOneofCase.Clothes) hash ^= Clothes.GetHashCode();
      if (itemCase_ == ItemOneofCase.Hat) hash ^= Hat.GetHashCode();
      if (itemCase_ == ItemOneofCase.Shoes) hash ^= Shoes.GetHashCode();
      if (itemCase_ == ItemOneofCase.Weapon) hash ^= Weapon.GetHashCode();
      if (itemCase_ == ItemOneofCase.Consumable) hash ^= Consumable.GetHashCode();
      hash ^= (int) itemCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxStack != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxStack);
      }
      if (stats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stats);
      }
      if (itemCase_ == ItemOneofCase.Clothes) {
        output.WriteRawTag(26);
        output.WriteMessage(Clothes);
      }
      if (itemCase_ == ItemOneofCase.Hat) {
        output.WriteRawTag(34);
        output.WriteMessage(Hat);
      }
      if (itemCase_ == ItemOneofCase.Shoes) {
        output.WriteRawTag(42);
        output.WriteMessage(Shoes);
      }
      if (itemCase_ == ItemOneofCase.Weapon) {
        output.WriteRawTag(50);
        output.WriteMessage(Weapon);
      }
      if (itemCase_ == ItemOneofCase.Consumable) {
        output.WriteRawTag(58);
        output.WriteMessage(Consumable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxStack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStack);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (itemCase_ == ItemOneofCase.Clothes) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clothes);
      }
      if (itemCase_ == ItemOneofCase.Hat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hat);
      }
      if (itemCase_ == ItemOneofCase.Shoes) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shoes);
      }
      if (itemCase_ == ItemOneofCase.Weapon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      if (itemCase_ == ItemOneofCase.Consumable) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumable);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.MaxStack != 0) {
        MaxStack = other.MaxStack;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::MM26.IO.Models.StatusModifier();
        }
        Stats.MergeFrom(other.Stats);
      }
      switch (other.ItemCase) {
        case ItemOneofCase.Clothes:
          if (Clothes == null) {
            Clothes = new global::MM26.IO.Models.Clothes();
          }
          Clothes.MergeFrom(other.Clothes);
          break;
        case ItemOneofCase.Hat:
          if (Hat == null) {
            Hat = new global::MM26.IO.Models.Hat();
          }
          Hat.MergeFrom(other.Hat);
          break;
        case ItemOneofCase.Shoes:
          if (Shoes == null) {
            Shoes = new global::MM26.IO.Models.Shoes();
          }
          Shoes.MergeFrom(other.Shoes);
          break;
        case ItemOneofCase.Weapon:
          if (Weapon == null) {
            Weapon = new global::MM26.IO.Models.Weapon();
          }
          Weapon.MergeFrom(other.Weapon);
          break;
        case ItemOneofCase.Consumable:
          if (Consumable == null) {
            Consumable = new global::MM26.IO.Models.Consumable();
          }
          Consumable.MergeFrom(other.Consumable);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxStack = input.ReadInt32();
            break;
          }
          case 18: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            global::MM26.IO.Models.Clothes subBuilder = new global::MM26.IO.Models.Clothes();
            if (itemCase_ == ItemOneofCase.Clothes) {
              subBuilder.MergeFrom(Clothes);
            }
            input.ReadMessage(subBuilder);
            Clothes = subBuilder;
            break;
          }
          case 34: {
            global::MM26.IO.Models.Hat subBuilder = new global::MM26.IO.Models.Hat();
            if (itemCase_ == ItemOneofCase.Hat) {
              subBuilder.MergeFrom(Hat);
            }
            input.ReadMessage(subBuilder);
            Hat = subBuilder;
            break;
          }
          case 42: {
            global::MM26.IO.Models.Shoes subBuilder = new global::MM26.IO.Models.Shoes();
            if (itemCase_ == ItemOneofCase.Shoes) {
              subBuilder.MergeFrom(Shoes);
            }
            input.ReadMessage(subBuilder);
            Shoes = subBuilder;
            break;
          }
          case 50: {
            global::MM26.IO.Models.Weapon subBuilder = new global::MM26.IO.Models.Weapon();
            if (itemCase_ == ItemOneofCase.Weapon) {
              subBuilder.MergeFrom(Weapon);
            }
            input.ReadMessage(subBuilder);
            Weapon = subBuilder;
            break;
          }
          case 58: {
            global::MM26.IO.Models.Consumable subBuilder = new global::MM26.IO.Models.Consumable();
            if (itemCase_ == ItemOneofCase.Consumable) {
              subBuilder.MergeFrom(Consumable);
            }
            input.ReadMessage(subBuilder);
            Consumable = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxStack = input.ReadInt32();
            break;
          }
          case 18: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 26: {
            global::MM26.IO.Models.Clothes subBuilder = new global::MM26.IO.Models.Clothes();
            if (itemCase_ == ItemOneofCase.Clothes) {
              subBuilder.MergeFrom(Clothes);
            }
            input.ReadMessage(subBuilder);
            Clothes = subBuilder;
            break;
          }
          case 34: {
            global::MM26.IO.Models.Hat subBuilder = new global::MM26.IO.Models.Hat();
            if (itemCase_ == ItemOneofCase.Hat) {
              subBuilder.MergeFrom(Hat);
            }
            input.ReadMessage(subBuilder);
            Hat = subBuilder;
            break;
          }
          case 42: {
            global::MM26.IO.Models.Shoes subBuilder = new global::MM26.IO.Models.Shoes();
            if (itemCase_ == ItemOneofCase.Shoes) {
              subBuilder.MergeFrom(Shoes);
            }
            input.ReadMessage(subBuilder);
            Shoes = subBuilder;
            break;
          }
          case 50: {
            global::MM26.IO.Models.Weapon subBuilder = new global::MM26.IO.Models.Weapon();
            if (itemCase_ == ItemOneofCase.Weapon) {
              subBuilder.MergeFrom(Weapon);
            }
            input.ReadMessage(subBuilder);
            Weapon = subBuilder;
            break;
          }
          case 58: {
            global::MM26.IO.Models.Consumable subBuilder = new global::MM26.IO.Models.Consumable();
            if (itemCase_ == ItemOneofCase.Consumable) {
              subBuilder.MergeFrom(Consumable);
            }
            input.ReadMessage(subBuilder);
            Consumable = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Clothes : pb::IMessage<Clothes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Clothes> _parser = new pb::MessageParser<Clothes>(() => new Clothes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Clothes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.ItemReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Clothes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Clothes(Clothes other) : this() {
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Clothes Clone() {
      return new Clothes(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private global::MM26.IO.Models.StatusModifier stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.StatusModifier Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Clothes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Clothes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stats, other.Stats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Clothes other) {
      if (other == null) {
        return;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::MM26.IO.Models.StatusModifier();
        }
        Stats.MergeFrom(other.Stats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Hat : pb::IMessage<Hat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Hat> _parser = new pb::MessageParser<Hat>(() => new Hat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.ItemReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hat(Hat other) : this() {
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      hatEffect_ = other.hatEffect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hat Clone() {
      return new Hat(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private global::MM26.IO.Models.StatusModifier stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.StatusModifier Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "hat_effect" field.</summary>
    public const int HatEffectFieldNumber = 2;
    private global::MM26.IO.Models.Hat.Types.HatEffect hatEffect_ = global::MM26.IO.Models.Hat.Types.HatEffect.Test;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.Hat.Types.HatEffect HatEffect {
      get { return hatEffect_; }
      set {
        hatEffect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stats, other.Stats)) return false;
      if (HatEffect != other.HatEffect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (HatEffect != global::MM26.IO.Models.Hat.Types.HatEffect.Test) hash ^= HatEffect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (HatEffect != global::MM26.IO.Models.Hat.Types.HatEffect.Test) {
        output.WriteRawTag(16);
        output.WriteEnum((int) HatEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (HatEffect != global::MM26.IO.Models.Hat.Types.HatEffect.Test) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HatEffect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hat other) {
      if (other == null) {
        return;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::MM26.IO.Models.StatusModifier();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.HatEffect != global::MM26.IO.Models.Hat.Types.HatEffect.Test) {
        HatEffect = other.HatEffect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 16: {
            HatEffect = (global::MM26.IO.Models.Hat.Types.HatEffect) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 16: {
            HatEffect = (global::MM26.IO.Models.Hat.Types.HatEffect) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Hat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum HatEffect {
        /// <summary>
        /// TOOD: add actual hat effects
        /// </summary>
        [pbr::OriginalName("TEST")] Test = 0,
      }

    }
    #endregion

  }

  public sealed partial class Shoes : pb::IMessage<Shoes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Shoes> _parser = new pb::MessageParser<Shoes>(() => new Shoes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Shoes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.ItemReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shoes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shoes(Shoes other) : this() {
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shoes Clone() {
      return new Shoes(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private global::MM26.IO.Models.StatusModifier stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.StatusModifier Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Shoes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Shoes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stats, other.Stats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Shoes other) {
      if (other == null) {
        return;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::MM26.IO.Models.StatusModifier();
        }
        Stats.MergeFrom(other.Stats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Weapon : pb::IMessage<Weapon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Weapon> _parser = new pb::MessageParser<Weapon>(() => new Weapon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Weapon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.ItemReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Weapon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Weapon(Weapon other) : this() {
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      range_ = other.range_;
      splashRadius_ = other.splashRadius_;
      magicDamage_ = other.magicDamage_;
      physicalDamage_ = other.physicalDamage_;
      onHitEffect_ = other.onHitEffect_ != null ? other.onHitEffect_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Weapon Clone() {
      return new Weapon(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private global::MM26.IO.Models.StatusModifier stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.StatusModifier Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 2;
    private int range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "splash_radius" field.</summary>
    public const int SplashRadiusFieldNumber = 3;
    private int splashRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SplashRadius {
      get { return splashRadius_; }
      set {
        splashRadius_ = value;
      }
    }

    /// <summary>Field number for the "magic_damage" field.</summary>
    public const int MagicDamageFieldNumber = 4;
    private int magicDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicDamage {
      get { return magicDamage_; }
      set {
        magicDamage_ = value;
      }
    }

    /// <summary>Field number for the "physical_damage" field.</summary>
    public const int PhysicalDamageFieldNumber = 5;
    private int physicalDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PhysicalDamage {
      get { return physicalDamage_; }
      set {
        physicalDamage_ = value;
      }
    }

    /// <summary>Field number for the "on_hit_effect" field.</summary>
    public const int OnHitEffectFieldNumber = 6;
    private global::MM26.IO.Models.TempStatusModifier onHitEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.TempStatusModifier OnHitEffect {
      get { return onHitEffect_; }
      set {
        onHitEffect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Weapon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Weapon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stats, other.Stats)) return false;
      if (Range != other.Range) return false;
      if (SplashRadius != other.SplashRadius) return false;
      if (MagicDamage != other.MagicDamage) return false;
      if (PhysicalDamage != other.PhysicalDamage) return false;
      if (!object.Equals(OnHitEffect, other.OnHitEffect)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (Range != 0) hash ^= Range.GetHashCode();
      if (SplashRadius != 0) hash ^= SplashRadius.GetHashCode();
      if (MagicDamage != 0) hash ^= MagicDamage.GetHashCode();
      if (PhysicalDamage != 0) hash ^= PhysicalDamage.GetHashCode();
      if (onHitEffect_ != null) hash ^= OnHitEffect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (Range != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Range);
      }
      if (SplashRadius != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SplashRadius);
      }
      if (MagicDamage != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MagicDamage);
      }
      if (PhysicalDamage != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PhysicalDamage);
      }
      if (onHitEffect_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OnHitEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (Range != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Range);
      }
      if (SplashRadius != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SplashRadius);
      }
      if (MagicDamage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicDamage);
      }
      if (PhysicalDamage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PhysicalDamage);
      }
      if (onHitEffect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnHitEffect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Weapon other) {
      if (other == null) {
        return;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::MM26.IO.Models.StatusModifier();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.Range != 0) {
        Range = other.Range;
      }
      if (other.SplashRadius != 0) {
        SplashRadius = other.SplashRadius;
      }
      if (other.MagicDamage != 0) {
        MagicDamage = other.MagicDamage;
      }
      if (other.PhysicalDamage != 0) {
        PhysicalDamage = other.PhysicalDamage;
      }
      if (other.onHitEffect_ != null) {
        if (onHitEffect_ == null) {
          OnHitEffect = new global::MM26.IO.Models.TempStatusModifier();
        }
        OnHitEffect.MergeFrom(other.OnHitEffect);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 16: {
            Range = input.ReadInt32();
            break;
          }
          case 24: {
            SplashRadius = input.ReadInt32();
            break;
          }
          case 32: {
            MagicDamage = input.ReadInt32();
            break;
          }
          case 40: {
            PhysicalDamage = input.ReadInt32();
            break;
          }
          case 50: {
            if (onHitEffect_ == null) {
              OnHitEffect = new global::MM26.IO.Models.TempStatusModifier();
            }
            input.ReadMessage(OnHitEffect);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 16: {
            Range = input.ReadInt32();
            break;
          }
          case 24: {
            SplashRadius = input.ReadInt32();
            break;
          }
          case 32: {
            MagicDamage = input.ReadInt32();
            break;
          }
          case 40: {
            PhysicalDamage = input.ReadInt32();
            break;
          }
          case 50: {
            if (onHitEffect_ == null) {
              OnHitEffect = new global::MM26.IO.Models.TempStatusModifier();
            }
            input.ReadMessage(OnHitEffect);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Consumable : pb::IMessage<Consumable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Consumable> _parser = new pb::MessageParser<Consumable>(() => new Consumable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Consumable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.ItemReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Consumable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Consumable(Consumable other) : this() {
      effect_ = other.effect_ != null ? other.effect_.Clone() : null;
      stacks_ = other.stacks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Consumable Clone() {
      return new Consumable(this);
    }

    /// <summary>Field number for the "effect" field.</summary>
    public const int EffectFieldNumber = 1;
    private global::MM26.IO.Models.TempStatusModifier effect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.TempStatusModifier Effect {
      get { return effect_; }
      set {
        effect_ = value;
      }
    }

    /// <summary>Field number for the "stacks" field.</summary>
    public const int StacksFieldNumber = 2;
    private int stacks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stacks {
      get { return stacks_; }
      set {
        stacks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Consumable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Consumable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Effect, other.Effect)) return false;
      if (Stacks != other.Stacks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (effect_ != null) hash ^= Effect.GetHashCode();
      if (Stacks != 0) hash ^= Stacks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (effect_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Effect);
      }
      if (Stacks != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stacks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (effect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Effect);
      }
      if (Stacks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stacks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Consumable other) {
      if (other == null) {
        return;
      }
      if (other.effect_ != null) {
        if (effect_ == null) {
          Effect = new global::MM26.IO.Models.TempStatusModifier();
        }
        Effect.MergeFrom(other.Effect);
      }
      if (other.Stacks != 0) {
        Stacks = other.Stacks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (effect_ == null) {
              Effect = new global::MM26.IO.Models.TempStatusModifier();
            }
            input.ReadMessage(Effect);
            break;
          }
          case 16: {
            Stacks = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (effect_ == null) {
              Effect = new global::MM26.IO.Models.TempStatusModifier();
            }
            input.ReadMessage(Effect);
            break;
          }
          case 16: {
            Stacks = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StatusModifier : pb::IMessage<StatusModifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatusModifier> _parser = new pb::MessageParser<StatusModifier>(() => new StatusModifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusModifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.ItemReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusModifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusModifier(StatusModifier other) : this() {
      flatSpeedChange_ = other.flatSpeedChange_;
      percentSpeedChange_ = other.percentSpeedChange_;
      flatHealthChange_ = other.flatHealthChange_;
      percentHealthChange_ = other.percentHealthChange_;
      flatExperienceChange_ = other.flatExperienceChange_;
      percentExperienceChange_ = other.percentExperienceChange_;
      flatMagicDamageChange_ = other.flatMagicDamageChange_;
      percentMagicDamageChange_ = other.percentMagicDamageChange_;
      flatPhysicalDamageChange_ = other.flatPhysicalDamageChange_;
      percentPhysicalDamageChange_ = other.percentPhysicalDamageChange_;
      flatMagicDefenseChange_ = other.flatMagicDefenseChange_;
      percentMagicDefenseChange_ = other.percentMagicDefenseChange_;
      flatPhysicalDefenseChange_ = other.flatPhysicalDefenseChange_;
      percentPhysicalDefenseChange_ = other.percentPhysicalDefenseChange_;
      flatRegenPerTurn_ = other.flatRegenPerTurn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusModifier Clone() {
      return new StatusModifier(this);
    }

    /// <summary>Field number for the "flat_speed_change" field.</summary>
    public const int FlatSpeedChangeFieldNumber = 1;
    private int flatSpeedChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatSpeedChange {
      get { return flatSpeedChange_; }
      set {
        flatSpeedChange_ = value;
      }
    }

    /// <summary>Field number for the "percent_speed_change" field.</summary>
    public const int PercentSpeedChangeFieldNumber = 2;
    private float percentSpeedChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentSpeedChange {
      get { return percentSpeedChange_; }
      set {
        percentSpeedChange_ = value;
      }
    }

    /// <summary>Field number for the "flat_health_change" field.</summary>
    public const int FlatHealthChangeFieldNumber = 3;
    private int flatHealthChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatHealthChange {
      get { return flatHealthChange_; }
      set {
        flatHealthChange_ = value;
      }
    }

    /// <summary>Field number for the "percent_health_change" field.</summary>
    public const int PercentHealthChangeFieldNumber = 4;
    private float percentHealthChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentHealthChange {
      get { return percentHealthChange_; }
      set {
        percentHealthChange_ = value;
      }
    }

    /// <summary>Field number for the "flat_experience_change" field.</summary>
    public const int FlatExperienceChangeFieldNumber = 5;
    private int flatExperienceChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatExperienceChange {
      get { return flatExperienceChange_; }
      set {
        flatExperienceChange_ = value;
      }
    }

    /// <summary>Field number for the "percent_experience_change" field.</summary>
    public const int PercentExperienceChangeFieldNumber = 6;
    private float percentExperienceChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentExperienceChange {
      get { return percentExperienceChange_; }
      set {
        percentExperienceChange_ = value;
      }
    }

    /// <summary>Field number for the "flat_magic_damage_change" field.</summary>
    public const int FlatMagicDamageChangeFieldNumber = 7;
    private int flatMagicDamageChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatMagicDamageChange {
      get { return flatMagicDamageChange_; }
      set {
        flatMagicDamageChange_ = value;
      }
    }

    /// <summary>Field number for the "percent_magic_damage_change" field.</summary>
    public const int PercentMagicDamageChangeFieldNumber = 8;
    private float percentMagicDamageChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentMagicDamageChange {
      get { return percentMagicDamageChange_; }
      set {
        percentMagicDamageChange_ = value;
      }
    }

    /// <summary>Field number for the "flat_physical_damage_change" field.</summary>
    public const int FlatPhysicalDamageChangeFieldNumber = 9;
    private int flatPhysicalDamageChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatPhysicalDamageChange {
      get { return flatPhysicalDamageChange_; }
      set {
        flatPhysicalDamageChange_ = value;
      }
    }

    /// <summary>Field number for the "percent_physical_damage_change" field.</summary>
    public const int PercentPhysicalDamageChangeFieldNumber = 10;
    private float percentPhysicalDamageChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentPhysicalDamageChange {
      get { return percentPhysicalDamageChange_; }
      set {
        percentPhysicalDamageChange_ = value;
      }
    }

    /// <summary>Field number for the "flat_magic_defense_change" field.</summary>
    public const int FlatMagicDefenseChangeFieldNumber = 11;
    private int flatMagicDefenseChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatMagicDefenseChange {
      get { return flatMagicDefenseChange_; }
      set {
        flatMagicDefenseChange_ = value;
      }
    }

    /// <summary>Field number for the "percent_magic_defense_change" field.</summary>
    public const int PercentMagicDefenseChangeFieldNumber = 12;
    private float percentMagicDefenseChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentMagicDefenseChange {
      get { return percentMagicDefenseChange_; }
      set {
        percentMagicDefenseChange_ = value;
      }
    }

    /// <summary>Field number for the "flat_physical_defense_change" field.</summary>
    public const int FlatPhysicalDefenseChangeFieldNumber = 13;
    private int flatPhysicalDefenseChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatPhysicalDefenseChange {
      get { return flatPhysicalDefenseChange_; }
      set {
        flatPhysicalDefenseChange_ = value;
      }
    }

    /// <summary>Field number for the "percent_physical_defense_change" field.</summary>
    public const int PercentPhysicalDefenseChangeFieldNumber = 14;
    private float percentPhysicalDefenseChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentPhysicalDefenseChange {
      get { return percentPhysicalDefenseChange_; }
      set {
        percentPhysicalDefenseChange_ = value;
      }
    }

    /// <summary>Field number for the "flat_regen_per_turn" field.</summary>
    public const int FlatRegenPerTurnFieldNumber = 15;
    private int flatRegenPerTurn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatRegenPerTurn {
      get { return flatRegenPerTurn_; }
      set {
        flatRegenPerTurn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusModifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusModifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FlatSpeedChange != other.FlatSpeedChange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentSpeedChange, other.PercentSpeedChange)) return false;
      if (FlatHealthChange != other.FlatHealthChange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentHealthChange, other.PercentHealthChange)) return false;
      if (FlatExperienceChange != other.FlatExperienceChange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentExperienceChange, other.PercentExperienceChange)) return false;
      if (FlatMagicDamageChange != other.FlatMagicDamageChange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentMagicDamageChange, other.PercentMagicDamageChange)) return false;
      if (FlatPhysicalDamageChange != other.FlatPhysicalDamageChange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentPhysicalDamageChange, other.PercentPhysicalDamageChange)) return false;
      if (FlatMagicDefenseChange != other.FlatMagicDefenseChange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentMagicDefenseChange, other.PercentMagicDefenseChange)) return false;
      if (FlatPhysicalDefenseChange != other.FlatPhysicalDefenseChange) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentPhysicalDefenseChange, other.PercentPhysicalDefenseChange)) return false;
      if (FlatRegenPerTurn != other.FlatRegenPerTurn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FlatSpeedChange != 0) hash ^= FlatSpeedChange.GetHashCode();
      if (PercentSpeedChange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentSpeedChange);
      if (FlatHealthChange != 0) hash ^= FlatHealthChange.GetHashCode();
      if (PercentHealthChange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentHealthChange);
      if (FlatExperienceChange != 0) hash ^= FlatExperienceChange.GetHashCode();
      if (PercentExperienceChange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentExperienceChange);
      if (FlatMagicDamageChange != 0) hash ^= FlatMagicDamageChange.GetHashCode();
      if (PercentMagicDamageChange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentMagicDamageChange);
      if (FlatPhysicalDamageChange != 0) hash ^= FlatPhysicalDamageChange.GetHashCode();
      if (PercentPhysicalDamageChange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentPhysicalDamageChange);
      if (FlatMagicDefenseChange != 0) hash ^= FlatMagicDefenseChange.GetHashCode();
      if (PercentMagicDefenseChange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentMagicDefenseChange);
      if (FlatPhysicalDefenseChange != 0) hash ^= FlatPhysicalDefenseChange.GetHashCode();
      if (PercentPhysicalDefenseChange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentPhysicalDefenseChange);
      if (FlatRegenPerTurn != 0) hash ^= FlatRegenPerTurn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FlatSpeedChange != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FlatSpeedChange);
      }
      if (PercentSpeedChange != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PercentSpeedChange);
      }
      if (FlatHealthChange != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FlatHealthChange);
      }
      if (PercentHealthChange != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PercentHealthChange);
      }
      if (FlatExperienceChange != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FlatExperienceChange);
      }
      if (PercentExperienceChange != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(PercentExperienceChange);
      }
      if (FlatMagicDamageChange != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FlatMagicDamageChange);
      }
      if (PercentMagicDamageChange != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(PercentMagicDamageChange);
      }
      if (FlatPhysicalDamageChange != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FlatPhysicalDamageChange);
      }
      if (PercentPhysicalDamageChange != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(PercentPhysicalDamageChange);
      }
      if (FlatMagicDefenseChange != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(FlatMagicDefenseChange);
      }
      if (PercentMagicDefenseChange != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(PercentMagicDefenseChange);
      }
      if (FlatPhysicalDefenseChange != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(FlatPhysicalDefenseChange);
      }
      if (PercentPhysicalDefenseChange != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(PercentPhysicalDefenseChange);
      }
      if (FlatRegenPerTurn != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(FlatRegenPerTurn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FlatSpeedChange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatSpeedChange);
      }
      if (PercentSpeedChange != 0F) {
        size += 1 + 4;
      }
      if (FlatHealthChange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatHealthChange);
      }
      if (PercentHealthChange != 0F) {
        size += 1 + 4;
      }
      if (FlatExperienceChange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatExperienceChange);
      }
      if (PercentExperienceChange != 0F) {
        size += 1 + 4;
      }
      if (FlatMagicDamageChange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatMagicDamageChange);
      }
      if (PercentMagicDamageChange != 0F) {
        size += 1 + 4;
      }
      if (FlatPhysicalDamageChange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatPhysicalDamageChange);
      }
      if (PercentPhysicalDamageChange != 0F) {
        size += 1 + 4;
      }
      if (FlatMagicDefenseChange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatMagicDefenseChange);
      }
      if (PercentMagicDefenseChange != 0F) {
        size += 1 + 4;
      }
      if (FlatPhysicalDefenseChange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatPhysicalDefenseChange);
      }
      if (PercentPhysicalDefenseChange != 0F) {
        size += 1 + 4;
      }
      if (FlatRegenPerTurn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatRegenPerTurn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusModifier other) {
      if (other == null) {
        return;
      }
      if (other.FlatSpeedChange != 0) {
        FlatSpeedChange = other.FlatSpeedChange;
      }
      if (other.PercentSpeedChange != 0F) {
        PercentSpeedChange = other.PercentSpeedChange;
      }
      if (other.FlatHealthChange != 0) {
        FlatHealthChange = other.FlatHealthChange;
      }
      if (other.PercentHealthChange != 0F) {
        PercentHealthChange = other.PercentHealthChange;
      }
      if (other.FlatExperienceChange != 0) {
        FlatExperienceChange = other.FlatExperienceChange;
      }
      if (other.PercentExperienceChange != 0F) {
        PercentExperienceChange = other.PercentExperienceChange;
      }
      if (other.FlatMagicDamageChange != 0) {
        FlatMagicDamageChange = other.FlatMagicDamageChange;
      }
      if (other.PercentMagicDamageChange != 0F) {
        PercentMagicDamageChange = other.PercentMagicDamageChange;
      }
      if (other.FlatPhysicalDamageChange != 0) {
        FlatPhysicalDamageChange = other.FlatPhysicalDamageChange;
      }
      if (other.PercentPhysicalDamageChange != 0F) {
        PercentPhysicalDamageChange = other.PercentPhysicalDamageChange;
      }
      if (other.FlatMagicDefenseChange != 0) {
        FlatMagicDefenseChange = other.FlatMagicDefenseChange;
      }
      if (other.PercentMagicDefenseChange != 0F) {
        PercentMagicDefenseChange = other.PercentMagicDefenseChange;
      }
      if (other.FlatPhysicalDefenseChange != 0) {
        FlatPhysicalDefenseChange = other.FlatPhysicalDefenseChange;
      }
      if (other.PercentPhysicalDefenseChange != 0F) {
        PercentPhysicalDefenseChange = other.PercentPhysicalDefenseChange;
      }
      if (other.FlatRegenPerTurn != 0) {
        FlatRegenPerTurn = other.FlatRegenPerTurn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FlatSpeedChange = input.ReadInt32();
            break;
          }
          case 21: {
            PercentSpeedChange = input.ReadFloat();
            break;
          }
          case 24: {
            FlatHealthChange = input.ReadInt32();
            break;
          }
          case 37: {
            PercentHealthChange = input.ReadFloat();
            break;
          }
          case 40: {
            FlatExperienceChange = input.ReadInt32();
            break;
          }
          case 53: {
            PercentExperienceChange = input.ReadFloat();
            break;
          }
          case 56: {
            FlatMagicDamageChange = input.ReadInt32();
            break;
          }
          case 69: {
            PercentMagicDamageChange = input.ReadFloat();
            break;
          }
          case 72: {
            FlatPhysicalDamageChange = input.ReadInt32();
            break;
          }
          case 85: {
            PercentPhysicalDamageChange = input.ReadFloat();
            break;
          }
          case 88: {
            FlatMagicDefenseChange = input.ReadInt32();
            break;
          }
          case 101: {
            PercentMagicDefenseChange = input.ReadFloat();
            break;
          }
          case 104: {
            FlatPhysicalDefenseChange = input.ReadInt32();
            break;
          }
          case 117: {
            PercentPhysicalDefenseChange = input.ReadFloat();
            break;
          }
          case 120: {
            FlatRegenPerTurn = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FlatSpeedChange = input.ReadInt32();
            break;
          }
          case 21: {
            PercentSpeedChange = input.ReadFloat();
            break;
          }
          case 24: {
            FlatHealthChange = input.ReadInt32();
            break;
          }
          case 37: {
            PercentHealthChange = input.ReadFloat();
            break;
          }
          case 40: {
            FlatExperienceChange = input.ReadInt32();
            break;
          }
          case 53: {
            PercentExperienceChange = input.ReadFloat();
            break;
          }
          case 56: {
            FlatMagicDamageChange = input.ReadInt32();
            break;
          }
          case 69: {
            PercentMagicDamageChange = input.ReadFloat();
            break;
          }
          case 72: {
            FlatPhysicalDamageChange = input.ReadInt32();
            break;
          }
          case 85: {
            PercentPhysicalDamageChange = input.ReadFloat();
            break;
          }
          case 88: {
            FlatMagicDefenseChange = input.ReadInt32();
            break;
          }
          case 101: {
            PercentMagicDefenseChange = input.ReadFloat();
            break;
          }
          case 104: {
            FlatPhysicalDefenseChange = input.ReadInt32();
            break;
          }
          case 117: {
            PercentPhysicalDefenseChange = input.ReadFloat();
            break;
          }
          case 120: {
            FlatRegenPerTurn = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TempStatusModifier : pb::IMessage<TempStatusModifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TempStatusModifier> _parser = new pb::MessageParser<TempStatusModifier>(() => new TempStatusModifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TempStatusModifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MM26.IO.Models.ItemReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TempStatusModifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TempStatusModifier(TempStatusModifier other) : this() {
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      flatMagicalDamagePerTurn_ = other.flatMagicalDamagePerTurn_;
      flatPhysicalDamagePerTurn_ = other.flatPhysicalDamagePerTurn_;
      flatRegenPerTurn_ = other.flatRegenPerTurn_;
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TempStatusModifier Clone() {
      return new TempStatusModifier(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private global::MM26.IO.Models.StatusModifier stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MM26.IO.Models.StatusModifier Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "flat_magical_damage_per_turn" field.</summary>
    public const int FlatMagicalDamagePerTurnFieldNumber = 2;
    private int flatMagicalDamagePerTurn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatMagicalDamagePerTurn {
      get { return flatMagicalDamagePerTurn_; }
      set {
        flatMagicalDamagePerTurn_ = value;
      }
    }

    /// <summary>Field number for the "flat_physical_damage_per_turn" field.</summary>
    public const int FlatPhysicalDamagePerTurnFieldNumber = 3;
    private int flatPhysicalDamagePerTurn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatPhysicalDamagePerTurn {
      get { return flatPhysicalDamagePerTurn_; }
      set {
        flatPhysicalDamagePerTurn_ = value;
      }
    }

    /// <summary>Field number for the "flat_regen_per_turn" field.</summary>
    public const int FlatRegenPerTurnFieldNumber = 4;
    private int flatRegenPerTurn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FlatRegenPerTurn {
      get { return flatRegenPerTurn_; }
      set {
        flatRegenPerTurn_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 5;
    private int duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TempStatusModifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TempStatusModifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stats, other.Stats)) return false;
      if (FlatMagicalDamagePerTurn != other.FlatMagicalDamagePerTurn) return false;
      if (FlatPhysicalDamagePerTurn != other.FlatPhysicalDamagePerTurn) return false;
      if (FlatRegenPerTurn != other.FlatRegenPerTurn) return false;
      if (Duration != other.Duration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (FlatMagicalDamagePerTurn != 0) hash ^= FlatMagicalDamagePerTurn.GetHashCode();
      if (FlatPhysicalDamagePerTurn != 0) hash ^= FlatPhysicalDamagePerTurn.GetHashCode();
      if (FlatRegenPerTurn != 0) hash ^= FlatRegenPerTurn.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (FlatMagicalDamagePerTurn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FlatMagicalDamagePerTurn);
      }
      if (FlatPhysicalDamagePerTurn != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FlatPhysicalDamagePerTurn);
      }
      if (FlatRegenPerTurn != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FlatRegenPerTurn);
      }
      if (Duration != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (FlatMagicalDamagePerTurn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatMagicalDamagePerTurn);
      }
      if (FlatPhysicalDamagePerTurn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatPhysicalDamagePerTurn);
      }
      if (FlatRegenPerTurn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FlatRegenPerTurn);
      }
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TempStatusModifier other) {
      if (other == null) {
        return;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::MM26.IO.Models.StatusModifier();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.FlatMagicalDamagePerTurn != 0) {
        FlatMagicalDamagePerTurn = other.FlatMagicalDamagePerTurn;
      }
      if (other.FlatPhysicalDamagePerTurn != 0) {
        FlatPhysicalDamagePerTurn = other.FlatPhysicalDamagePerTurn;
      }
      if (other.FlatRegenPerTurn != 0) {
        FlatRegenPerTurn = other.FlatRegenPerTurn;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 16: {
            FlatMagicalDamagePerTurn = input.ReadInt32();
            break;
          }
          case 24: {
            FlatPhysicalDamagePerTurn = input.ReadInt32();
            break;
          }
          case 32: {
            FlatRegenPerTurn = input.ReadInt32();
            break;
          }
          case 40: {
            Duration = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::MM26.IO.Models.StatusModifier();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 16: {
            FlatMagicalDamagePerTurn = input.ReadInt32();
            break;
          }
          case 24: {
            FlatPhysicalDamagePerTurn = input.ReadInt32();
            break;
          }
          case 32: {
            FlatRegenPerTurn = input.ReadInt32();
            break;
          }
          case 40: {
            Duration = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
